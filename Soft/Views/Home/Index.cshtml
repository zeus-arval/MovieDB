@using Facade

@{
    ViewBag.Title = "Index";
}

<h2>Welcome to my test project - MovieDB!</h2>
<br />

@(Html.DevExtreme().DataGrid<MovieViewModel>()
    .ShowBorders(true)
    .DataSource(d => d.WebApi().Controller("MoviesList").Key("Id"))
    .Columns(columns => {
        columns.AddFor(m => m.Title)
            .Lookup(lookup => lookup
                .DataSource(d => d.WebApi().Controller("MoviesList").Key("Id"))
                .DisplayExpr("Title")
                .ValueExpr("Title")
            )
            .AllowFiltering(true)
            .AllowHeaderFiltering(false)
            .AllowSorting(false);

        columns.AddFor(m => m.CategoryName)
            .AllowFiltering(false)
            .AllowHeaderFiltering(true)
            .AllowSorting(false);

        columns.AddFor(m => m.Year)
            .AllowFiltering(false)
            .AllowHeaderFiltering(false)
            .AllowSorting(false);

        columns.AddFor(m => m.Rating)
            .AllowFiltering(false)
            .AllowHeaderFiltering(false)
            .AllowSorting(false);
    })
    .Paging(p => p.PageSize(10))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .Summary(s => s
        .TotalItems(totalItems => {
            totalItems.AddFor(m => m.Title).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems => {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
    .MasterDetail(md => md
        .Enabled(true)
        .Template(new TemplateName("descriptionContent"))
        )
)

@using (Html.DevExtreme().NamedTemplate("descriptionContent"))
{
    @(Html.DevExtreme().DataGrid<MovieDetailsViewModel>()
                .ShowBorders(true)
                .LoadPanel(l => l.Enabled(false))
                .Columns(columns =>
                {
                    columns.AddFor(m => m.Title)
                        .AllowSorting(false);

                    columns.AddFor(m => m.Year)
                        .AllowSorting(false);

                    columns.AddFor(m => m.Rating)
                        .AllowSorting(false);

                    columns.AddFor(m => m.Description)
                        .AllowSorting(false);

                }
                )
                .DataSource(d => d.WebApi()
                    .Controller("MoviesList")
                    .LoadAction("GetMoviesDescriptions")
                    .LoadParams(new
                    {
                        id = new JS("data.Id")
                    }
                )
            )
    )
}